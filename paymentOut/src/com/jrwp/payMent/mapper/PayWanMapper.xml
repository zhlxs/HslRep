<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jrwp.payMent.dao.PayWanMapper">
    <resultMap id="BaseResultMap" type="com.jrwp.payMent.entity.PayWan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ID" property="id" jdbcType="DECIMAL"/>
        <result column="WORKID" property="workid" jdbcType="OTHER"/>
        <result column="IDNUMBER" property="idnumber" jdbcType="OTHER"/>
        <result column="MACHINEID" property="machineid" jdbcType="OTHER"/>
        <result column="MACHINETYPE" property="machinetype" jdbcType="DECIMAL"/>
        <result column="PAYMONEY" property="paymoney" jdbcType="DECIMAL"/>
        <result column="PAYTYPE" property="paytype" jdbcType="DECIMAL"/>
        <result column="PAYSTATUS" property="paystatus" jdbcType="DECIMAL"/>
        <result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="PAYTIME" property="paytime" jdbcType="TIMESTAMP"/>
        <result column="ISEXPORT" property="isexport" jdbcType="DECIMAL"/>
        <result column="PAYID" property="payid" jdbcType="DECIMAL"/>
        <result column="QRCODETYPE" property="qrcodetype" jdbcType="DECIMAL"/>
        <result column="ORDERNUMBER" property="ordernumber" jdbcType="OTHER"/>
        <result column="QRCODEURL" property="qrcodeurl" jdbcType="OTHER"/>
        <result column="DEPTCODE" property="deptcode" jdbcType="OTHER"/>
        <result column="ORDERDESCRIBE" property="orderdescribe" jdbcType="OTHER"/>
        <result column="ONLYIN" property="onlyin" jdbcType="DECIMAL"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.jrwp.payMent.entity.PayWan" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="QRCODE" property="qrcode" jdbcType="BLOB"/>
    </resultMap>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        QRCODE
    </sql>
    <!--查询支付账号下的记录-->
    <select id="listBycode" resultType="com.jrwp.payMent.entity.PayWanInfo">
        select s.*,c.configname,d.deptname,ra.checkstatus as refundStatus from pay_sync s
        left join core_dept d on d.deptcode = s.deptcode
        left join dept_payconfig dp on dp.deptid = d.id
        left join pay_config c on c.id = dp.payconfigid
        left join refund_apply ra on ra.ordernumber=s.ordernumber
         ${whereSql}
          and s.paytype = c.configtype+1
          and s.paystatus=2
        order by s.id desc
    </select>

    <select id="getWanInfo" resultType="com.jrwp.payMent.entity.PayWanInfo">
        select s.*,c.configname,d.deptname,ra.checkstatus as refundStatus from pay_sync s
        left join core_dept d on d.deptcode = s.deptcode
        left join dept_payconfig dp on dp.deptid = d.id
        left join pay_config c on c.id = dp.payconfigid
        left join refund_apply ra on ra.ordernumber=s.ordernumber
        where s.id =#{id}  and s.paytype = c.configtype+1
    </select>
    <select id="getByOrderNumber" resultType="com.jrwp.payMent.entity.PayWan">
        select * from pay_sync where ordernumber=#{ordernumber}
    </select>
    <select id="coutwanbymachine" resultType="com.jrwp.payMent.entity.WanCount">
        select count(*) as count,m.machinename as name,sum(w.paymoney) as total from pay_wan w left join pay_record r on w.payid = r.id
        left join core_dept d on d.deptcode = w.deptcode
        left join machineinfo m on w.machineid = m.machineid
        where 1=1 and w.PAYSTATUS=2
        <if test="begintime !=null and begintime!=''">
            and to_date(to_char(w.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &gt;= to_date(#{begintime},'yyyy-mm-dd')
        </if>
        <if test="endtime !=null and endtime!=''">
            and to_date(to_char(w.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(#{endtime},'yyyy-mm-dd')
        </if>
        <if test="payType !=null and payType!=''">
            and r.payType = #{payType}
        </if>
        and
        (
        <if test="startCodes ==null and macIds ==null ">
            1=1
        </if>
        <if test="startCodes !=null">
            <foreach collection="startCodes" item="startCode" index="index" open="(" close=")" separator="or">
                d.deptcode like #{startCode}
            </foreach>
        </if>
        <if test="macIds !=null">
            <if test="startCodes !=null">
                or
            </if>
            m.id in
            <foreach collection="macIds" item="macid" index="index" open="(" close=")" separator=",">
                #{macid}
            </foreach>
        </if>
        )
        group by m.machinename
    </select>
    <select id="coutwanbyconfig" resultType="com.jrwp.payMent.entity.WanCount">
        select count(1) as count,t.machinetype,c.configname name,c.id as conid ,sum(t.paymoney) as total
        from (select
        nvl(s.id, w.id) id,
        nvl(s.workid, w.workid) workid,
        nvl(s.idnumber, w.idnumber) idnumber,
        nvl(s.machineid, w.machineid) machineid,
        nvl(s.machinetype, w.machinetype) machinetype,
        nvl(s.paymoney, w.paymoney) paymoney,
        nvl(s.paytype, w.paytype) paytype,
        nvl(s.paystatus, w.paystatus) paystatus,
        nvl(s.createtime, w.createtime) createtime,
        nvl(s.paytime, w.paytime) paytime,
        nvl(s.payid, w.payid) payid,
        nvl(s.ordernumber, w.ordernumber) ordernumber,
        nvl(s.orderdescribe, w.orderdescribe) orderdescribe
        from pay_sync s
        full join pay_wan w
        on s.ordernumber = w.ordernumber) t
        left join pay_record r on r.id = t.payid
        left join pay_config c on c.id = r.payconfigid
        where t.paystatus=2
        <if test="begintime !=null and begintime!=''">
            and to_date(to_char(t.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &gt;= to_date(#{begintime},'yyyy-mm-dd')
        </if>
        <if test="endtime !=null and endtime!=''">
            and to_date(to_char(t.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(#{endtime},'yyyy-mm-dd')
        </if>
        <if test="payType !=null and payType!=''">
            and t.payType = #{payType}
        </if>
        <if test="machinetype !=null and machinetype!=''">
            and t.machinetype = #{machinetype}
        </if>
        <if test="configname !=null and configname!=''">
            and c.configname like #{configname}
        </if>
        group by c.configname,t.machinetype,c.id order by conid desc

    </select>
    <select id="getMachines" resultType="com.jrwp.core.entity.Core_Dept">
        select m.id as macId,m.machinename as deptName from core_dept d left join machineinfo m on m.deptid=d.id where m.deptid = #{deptId}

    </select>
    <select id="getWanList" resultType="com.jrwp.payMent.entity.PayWanInfo">

        select t.*,c.configname
        from (select
        nvl(s.id, w.id) id,
        nvl(s.workid, w.workid) workid,
        nvl(s.idnumber, w.idnumber) idnumber,
        nvl(s.machineid, w.machineid) machineid,
        nvl(s.machinetype, w.machinetype) machinetype,
        nvl(s.paymoney, w.paymoney) paymoney,
        nvl(s.paytype, w.paytype) paytype,
        nvl(s.paystatus, w.paystatus) paystatus,
        nvl(s.createtime, w.createtime) createtime,
        nvl(s.paytime, w.paytime) paytime,
        nvl(s.payid, w.payid) payid,
        nvl(s.ordernumber, w.ordernumber) ordernumber,
        nvl(s.orderdescribe, w.orderdescribe) orderdescribe
        from pay_sync s
        full join pay_wan w
        on s.ordernumber = w.ordernumber) t
        left join pay_record r on r.id = t.payid
        left join pay_config c on c.id = r.payconfigid
        where 1=1
        <if test="payStatus !=null and payStatus!=''">
            and t.paystatus = #{payStatus}
        </if>
        <if test="begintime !=null and begintime!=''">
            and to_date(to_char(t.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &gt;= to_date(#{begintime},'yyyy-mm-dd')
        </if>
        <if test="endtime !=null and endtime!=''">
            and to_date(to_char(t.paytime,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(#{endtime},'yyyy-mm-dd')
        </if>
        <if test="payType !=null and payType!=''">
            and t.payType = #{payType}
        </if>
        <if test="ordernumber !=null and ordernumber!=''">
            and t.ordernumber = #{ordernumber}
        </if>
        <if test="configName !=null and configName!=''">
            and c.configName like #{configName}
        </if>
        <if test="startCodes !=null">
            and
            <foreach collection="startCodes" item="startCode" index="index" open="(" close=")" separator="or">
                d.deptcode like #{startCode}
            </foreach>
        </if>
        order by t.CREATETIME desc
    </select>


</mapper>