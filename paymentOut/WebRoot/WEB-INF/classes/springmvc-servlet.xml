<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <!-- 静态页面不被拦截 -->
    <mvc:default-servlet-handler/>
    <!-- spring使用注解 -->
    <mvc:annotation-driven validator="validator"/>
    <!--扫描这个包,use-default-filters="false"不扫描子包 -->
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.core.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.payMent.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.wx.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.appr.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.follow.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan use-default-filters="false"
                            base-package="com.jrwp.JSPay.action">
        <!-- 只扫描base-package指定下的有@Controller下的java类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- controller中返回视图的配置,前缀,后缀 -->
    <bean id="internalResourceViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- action中return的页面的前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- action中return的页面的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 处理springmvc的全局异常 -->
    <bean
            class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 定义默认的异常处理页面 -->
        <property name="defaultErrorView" value="error"/>
        <!-- 定义异常处理页面用来获取异常信息的变量名，如果不添加exceptionAttribute属性，则默认为exception -->
        <property name="exceptionAttribute" value="exception"/>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArithmeticException">error</prop>
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
    </bean>
    <!-- 拦截器链 -->
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（Request/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.jrwp.core.interceptor.URLInterceptor"/>
        </mvc:interceptor>
        <!-- <mvc:interceptor> -->
        <!-- <mvc:mapping path="/**" /> -->
        <!-- <bean class="com.jrwp.core.interceptor.LoginInterceptor" /> -->
        <!-- </mvc:interceptor> -->
        <mvc:interceptor>
            <mvc:mapping path="/*Controller/*"/>
            <bean class="com.jrwp.core.interceptor.LogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 校验器bean -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    <!-- 校验错误信息配置文件 -->
    <bean id="validatemessageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 错误信息资源的文件名 -->
        <property name="basenames">
            <list>
                <value>classpath:validatemessages</value>
            </list>
        </property>
        <!-- 资源文件的编码格式 -->
        <property name="fileEncodings" value="utf-8"/>
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120"/>
    </bean>
</beans>